<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Microsoft.Bot.Builder.Location</name>
    </assembly>
    <members>
        <member name="M:Microsoft.Bot.Builder.Location.Dialogs.RichLocationRetrieverDialog.#ctor(Microsoft.Bot.Builder.Location.Bing.IGeoSpatialService,System.String,System.Boolean,Microsoft.Bot.Builder.Location.LocationResourceManager)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Bot.Builder.Location.LocationDialog"/> class.
            </summary>
            <param name="geoSpatialService">The Geo-Special Service</param>
            <param name="prompt">The prompt posted to the user when dialog starts.</param>
            <param name="supportsKeyboard">Indicates whether channel supports keyboard buttons or not.</param>
            <param name="resourceManager">The resource manager.</param>
        </member>
        <member name="M:Microsoft.Bot.Builder.Location.Dialogs.RichLocationRetrieverDialog.TryResolveAddressAsync(Microsoft.Bot.Builder.Dialogs.IDialogContext,Microsoft.Bot.Connector.IMessageActivity)">
            <summary>
            Tries to resolve address by passing the test to the Bing Geo-Spatial API
            and looking for returned locations.
            </summary>
            <param name="context">The context.</param>
            <param name="message">The message.</param>
            <returns>The asynchronous task.</returns>
        </member>
        <member name="M:Microsoft.Bot.Builder.Location.Dialogs.RichLocationRetrieverDialog.TryResolveAddressSelectionAsync(Microsoft.Bot.Builder.Dialogs.IDialogContext,Microsoft.Bot.Connector.IMessageActivity)">
            <summary>
            Tries to resolve address selection by parsing text and checking if it is within locations range.
            </summary>
            <param name="context">The context.</param>
            <param name="message">The message.</param>
            <returns>The asynchronous task.</returns>
        </member>
        <member name="M:Microsoft.Bot.Builder.Location.Dialogs.RichLocationRetrieverDialog.PromptForSingleAddressSelection(Microsoft.Bot.Builder.Dialogs.IDialogContext)">
            <summary>
            Prompts the user to confirm single address selection.
            </summary>
            <param name="context">The context.</param>
        </member>
        <member name="M:Microsoft.Bot.Builder.Location.Dialogs.RichLocationRetrieverDialog.PromptForMultipleAddressSelection(Microsoft.Bot.Builder.Dialogs.IDialogContext)">
            <summary>
            Prompts the user for multiple address selection.
            </summary>
            <param name="context">The context.</param>
            <returns></returns>
        </member>
        <member name="T:Microsoft.Bot.Builder.Location.Dialogs.LocationDialogBase`1">
            <summary>
            Represents base dialog that handles all the base functionalities such as
            running special commands scorables on all received messages.
            </summary>
            <typeparam name="T">The dialog type</typeparam>
        </member>
        <member name="P:Microsoft.Bot.Builder.Location.Dialogs.LocationDialogBase`1.IsRootDialog">
            <summary>
            Determines whether this is the root dialog or not.
            </summary>
            <remarks>
            This is used to determine how the dialog should handle special commands
            such as reset.
            </remarks>
        </member>
        <member name="P:Microsoft.Bot.Builder.Location.Dialogs.LocationDialogBase`1.ResourceManager">
            <summary>
            Gets the resource manager.
            </summary>
            <value>
            The resource manager.
            </value>
        </member>
        <member name="M:Microsoft.Bot.Builder.Location.Dialogs.LocationDialogBase`1.#ctor(System.Reflection.Assembly,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Bot.Builder.Location.Dialogs.LocationDialogBase`1" /> class.
            </summary>
            <param name="resourceAssembly">The resource assembly.</param>
            <param name="resourceName">Name of the resource.</param>
        </member>
        <member name="M:Microsoft.Bot.Builder.Location.Dialogs.LocationDialogBase`1.#ctor(Microsoft.Bot.Builder.Location.LocationResourceManager)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Bot.Builder.Location.Dialogs.LocationDialogBase`1" /> class.
            </summary>
            <param name="resourceManager">The resource manager.</param>
        </member>
        <member name="M:Microsoft.Bot.Builder.Location.Dialogs.LocationDialogBase`1.StartAsync(Microsoft.Bot.Builder.Dialogs.IDialogContext)">
            <summary>
            Starts the dialog.
            </summary>
            <param name="context">The context.</param>
            <returns>The asynchronous task.</returns>
        </member>
        <member name="M:Microsoft.Bot.Builder.Location.Dialogs.LocationDialogBase`1.MessageReceivedAsync(Microsoft.Bot.Builder.Dialogs.IDialogContext,Microsoft.Bot.Builder.Dialogs.IAwaitable{Microsoft.Bot.Connector.IMessageActivity})">
            <summary>
            Invoked when a new message is received.
            </summary>
            <param name="context">The context.</param>
            <param name="result">The result.</param>
            <returns>The asynchronous task.</returns>
        </member>
        <member name="M:Microsoft.Bot.Builder.Location.Dialogs.LocationDialogBase`1.MessageReceivedInternalAsync(Microsoft.Bot.Builder.Dialogs.IDialogContext,Microsoft.Bot.Builder.Dialogs.IAwaitable{Microsoft.Bot.Connector.IMessageActivity})">
            <summary>
            Implements the dialog specific logic that needs to run on new messages.
            If the message is special command, it gets handled by <see cref="M:Microsoft.Bot.Builder.Location.Dialogs.LocationDialogBase`1.MessageReceivedAsync(Microsoft.Bot.Builder.Dialogs.IDialogContext,Microsoft.Bot.Builder.Dialogs.IAwaitable{Microsoft.Bot.Connector.IMessageActivity})"/>
            and this method doesn't get called.
            </summary>
            <param name="context">The context.</param>
            <param name="result">The result.</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Bot.Builder.Location.Dialogs.LocationDialogBase`1.ResumeAfterChildDialogAsync(Microsoft.Bot.Builder.Dialogs.IDialogContext,Microsoft.Bot.Builder.Dialogs.IAwaitable{Microsoft.Bot.Builder.Location.Dialogs.LocationDialogResponse})">
            <summary>
            Invoked after a child dialog returns context.
            </summary>
            <param name="context">The context.</param>
            <param name="response">The response.</param>
            <returns>The asynchronous task.</returns>
        </member>
        <member name="M:Microsoft.Bot.Builder.Location.Dialogs.LocationDialogBase`1.ResumeAfterChildDialogInternalAsync(Microsoft.Bot.Builder.Dialogs.IDialogContext,Microsoft.Bot.Builder.Dialogs.IAwaitable{Microsoft.Bot.Builder.Location.Dialogs.LocationDialogResponse})">
            <summary>
            Implements child class specific logic when a child dialog returns context.
            </summary>
            <param name="context">The context.</param>
            <param name="response">The response.</param>
            <returns>The asynchronous task.</returns>
        </member>
        <member name="M:Microsoft.Bot.Builder.Location.Dialogs.LocationDialogBase`1.TryHandleSpecialCommandResponse(Microsoft.Bot.Builder.Dialogs.IDialogContext,Microsoft.Bot.Builder.Location.Dialogs.LocationDialogResponse)">
            <summary>
            Handles the response by checking if it is special command.
            Returns true if response is a special command, false otherwise.
            </summary>
            <param name="context">The context.</param>
            <param name="response">The response.</param>
            <returns>The asynchronous task.</returns>
        </member>
        <member name="T:Microsoft.Bot.Builder.Location.Dialogs.LocationRequiredFieldsDialog">
            <summary>
            Represents a dialog that prompts the user for any missing location fields.
            </summary>
        </member>
        <member name="M:Microsoft.Bot.Builder.Location.Bing.IGeoSpatialService.GetLocationsByQueryAsync(System.String)">
            <summary>
            Gets the locations asynchronously.
            </summary>
            <param name="address">The address query.</param>
            <returns>The found locations</returns>
        </member>
        <member name="M:Microsoft.Bot.Builder.Location.Bing.IGeoSpatialService.GetLocationsByPointAsync(System.Double,System.Double)">
            <summary>
            Gets the locations asynchronously.
            </summary>
            <param name="latitude">The point latitude.</param>
            <param name="longitude">The point longitude.</param>
            <returns>The found locations</returns>
        </member>
        <member name="M:Microsoft.Bot.Builder.Location.Bing.IGeoSpatialService.GetLocationMapImageUrl(Microsoft.Bot.Builder.Location.Bing.Location,System.Nullable{System.Int32})">
            <summary>
            Gets the map image URL.
            </summary>
            <param name="location">The location.</param>
            <param name="index">The pin point index.</param>
            <returns></returns>
        </member>
        <member name="T:Microsoft.Bot.Builder.Location.LocationRequiredFields">
            <summary>
            Determines the required fields.
            </summary>
        </member>
        <member name="F:Microsoft.Bot.Builder.Location.LocationRequiredFields.None">
            <summary>
            No required fields.
            </summary>
        </member>
        <member name="F:Microsoft.Bot.Builder.Location.LocationRequiredFields.StreetAddress">
            <summary>
            The street address
            </summary>
            <example>One Microsoft Way</example>
        </member>
        <member name="F:Microsoft.Bot.Builder.Location.LocationRequiredFields.Locality">
            <summary>
            The locality
            </summary>
            <example>Redmond</example>
        </member>
        <member name="F:Microsoft.Bot.Builder.Location.LocationRequiredFields.Region">
            <summary>
            The region
            </summary>
            <example>WA</example>
        </member>
        <member name="F:Microsoft.Bot.Builder.Location.LocationRequiredFields.Country">
            <summary>
            The country
            </summary>
            <example>United States</example>
        </member>
        <member name="F:Microsoft.Bot.Builder.Location.LocationRequiredFields.PostalCode">
            <summary>
            The postal code
            </summary>
            <example>98052</example>
        </member>
        <member name="T:Microsoft.Bot.Builder.Location.PlaceExtensions">
            <summary>
            Extensions for <see cref="T:Microsoft.Bot.Connector.Place"/>
            </summary>
        </member>
        <member name="M:Microsoft.Bot.Builder.Location.PlaceExtensions.GetPostalAddress(Microsoft.Bot.Connector.Place)">
            <summary>
            Gets the postal address.
            </summary>
            <param name="place">The place.</param>
            <returns>The <see cref="T:Microsoft.Bot.Builder.Location.PostalAddress"/> if available, null otherwise.</returns>
        </member>
        <member name="M:Microsoft.Bot.Builder.Location.PlaceExtensions.GetGeoCoordinates(Microsoft.Bot.Connector.Place)">
            <summary>
            Gets the geo coordinates.
            </summary>
            <param name="place">The place.</param>
            <returns>The <see cref="T:Microsoft.Bot.Connector.GeoCoordinates"/> if available, null otherwise.</returns>
        </member>
        <member name="T:Microsoft.Bot.Builder.Location.PostalAddress">
            <summary>
            Represents a postal address (https://schema.org/PostalAddress)
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Builder.Location.PostalAddress.FormattedAddress">
            <summary>
            Gets or sets the formatted address.
            </summary>
            <example>One Microsoft Way, Redmond, WA, United States (98052)</example>
        </member>
        <member name="P:Microsoft.Bot.Builder.Location.PostalAddress.Country">
            <summary>
            Gets or sets the country
            </summary>
            <example>United States</example>
        </member>
        <member name="P:Microsoft.Bot.Builder.Location.PostalAddress.Locality">
            <summary>
            Gets or sets the locality
            </summary>
            <example>Redmond</example>
        </member>
        <member name="P:Microsoft.Bot.Builder.Location.PostalAddress.Region">
            <summary>
            Gets or sets the region
            </summary>
            <example>WA</example>
        </member>
        <member name="P:Microsoft.Bot.Builder.Location.PostalAddress.PostalCode">
            <summary>
            Gets or sets the postal code
            </summary>
            <example>98052</example>
        </member>
        <member name="P:Microsoft.Bot.Builder.Location.PostalAddress.StreetAddress">
            <summary>
            Gets or sets the street address
            </summary>
            <example>One Microsoft Way</example>
        </member>
        <member name="T:Microsoft.Bot.Builder.Location.LocationOptions">
            <summary>
            Options for customizing <see cref="T:Microsoft.Bot.Builder.Location.LocationDialog"/>
            </summary>
        </member>
        <member name="F:Microsoft.Bot.Builder.Location.LocationOptions.None">
            <summary>
            No options.
            </summary>
        </member>
        <member name="F:Microsoft.Bot.Builder.Location.LocationOptions.UseNativeControl">
            <summary>
            Some of the channels (e.g. Facebook) has a built in
            location widget. Use this option to indicate if you want
            the <c>LocationDialog</c> to use it when available.
            </summary>
        </member>
        <member name="F:Microsoft.Bot.Builder.Location.LocationOptions.ReverseGeocode">
            <summary>
            Use this option if you want the location dialog to reverse lookup
            geo-coordinates before returning. This can be useful if you depend
            on the channel location service or native control to get user location
            but still want the control to return to you a full address.
            </summary>
            <remarks>
            Due to the accuracy of reverse geo-coders, we only use it to capture
            <see cref="P:Microsoft.Bot.Builder.Location.PostalAddress.Locality"/>, <see cref="P:Microsoft.Bot.Builder.Location.PostalAddress.Region"/>,
            <see cref="P:Microsoft.Bot.Builder.Location.PostalAddress.Country"/>, and <see cref="P:Microsoft.Bot.Builder.Location.PostalAddress.PostalCode"/>
            </remarks>
        </member>
        <member name="T:Microsoft.Bot.Builder.Location.LocationDialog">
            <summary>
            Represents a dialog that handles retrieving a location from the user.
            <para>
            This dialog provides a location picker conversational UI (CUI) control,
            powered by Bing's Geo-spatial API and Places Graph, to make the process 
            of getting the user's location easy and consistent across all messaging 
            channels supported by bot framework.
            </para>
            </summary>
            <example>
            The following examples demonstrate how to use <see cref="T:Microsoft.Bot.Builder.Location.LocationDialog"/> to achieve different scenarios:
            <list type="bullet">
            <item>
            <description>
            Calling <see cref="T:Microsoft.Bot.Builder.Location.LocationDialog"/> with default parameters
            <code>
            var prompt = "Hi, where would you like me to ship to your widget?";
            var locationDialog = new LocationDialog(message.ChannelId, prompt);
            context.Call(locationDialog, (dialogContext, result) => {...});
            </code>
            </description>
            </item>
            <item>
            <description>
            Using channel's native location widget if available (e.g. Facebook) 
            <code>
            var prompt = "Hi, where would you like me to ship to your widget?";
            var locationDialog = new LocationDialog(message.ChannelId, prompt, LocationOptions.UseNativeControl);
            context.Call(locationDialog, (dialogContext, result) => {...});
            </code>
            </description>
            </item>
            <item>
            <description>
            Using channel's native location widget if available (e.g. Facebook)
            and having Bing try to reverse geo-code the provided coordinates to
             automatically fill-in address fields.
            For more info see <see cref="F:Microsoft.Bot.Builder.Location.LocationOptions.ReverseGeocode"/>
            <code>
            var prompt = "Hi, where would you like me to ship to your widget?";
            var locationDialog = new LocationDialog(message.ChannelId, prompt, LocationOptions.UseNativeControl | LocationOptions.ReverseGeocode);
            context.Call(locationDialog, (dialogContext, result) => {...});
            </code>
            </description>
            </item>
            <item>
            <description>
            Specifying required fields to have the dialog prompt the user for if missing from address. 
            For more info see <see cref="T:Microsoft.Bot.Builder.Location.LocationRequiredFields"/>
            <code>
            var prompt = "Hi, where would you like me to ship to your widget?";
            var locationDialog = new LocationDialog(message.ChannelId, prompt, LocationOptions.None, LocationRequiredFields.StreetAddress | LocationRequiredFields.PostalCode);
            context.Call(locationDialog, (dialogContext, result) => {...});
            </code>
            </description>
            </item>
            <item>
            <description>
            Example on how to handle the returned place
            <code>
            var prompt = "Hi, where would you like me to ship to your widget?";
            var locationDialog = new LocationDialog(message.ChannelId, prompt, LocationOptions.None, LocationRequiredFields.StreetAddress | LocationRequiredFields.PostalCode);
            context.Call(locationDialog, (context, result) => {
                Place place = await result;
                if (place != null)
                {
                    var address = place.GetPostalAddress();
                    string name = address != null ?
                        $"{address.StreetAddress}, {address.Locality}, {address.Region}, {address.Country} ({address.PostalCode})" :
                        "the pinned location";
                    await context.PostAsync($"OK, I will ship it to {name}");
                }
                else
                {
                    await context.PostAsync("OK, I won't be shipping it");
                }
            }
            </code>
            </description>
            </item>
            </list>
            </example>
        </member>
        <member name="P:Microsoft.Bot.Builder.Location.LocationDialog.IsRootDialog">
            <summary>
            Determines whether this is the root dialog or not.
            </summary>
            <remarks>
            This is used to determine how the dialog should handle special commands
            such as reset.
            </remarks>
        </member>
        <member name="M:Microsoft.Bot.Builder.Location.LocationDialog.#ctor(System.String,System.String,Microsoft.Bot.Builder.Location.LocationOptions,Microsoft.Bot.Builder.Location.LocationRequiredFields,System.Reflection.Assembly,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Bot.Builder.Location.LocationDialog"/> class.
            </summary>
            <param name="channelId">The channel identifier.</param>
            <param name="prompt">The prompt posted to the user when dialog starts.</param>
            <param name="options">The location options used to customize the experience.</param>
            <param name="requiredFields">The location required fields.</param>
            <param name="resourceAssembly">The resource assembly. If not specified, the default resources will be used.</param>
            <param name="resourceName">Name of the resource. If not specified, the default resources will be used.</param>
        </member>
        <member name="M:Microsoft.Bot.Builder.Location.LocationDialog.StartAsync(Microsoft.Bot.Builder.Dialogs.IDialogContext)">
            <summary>
            Starts the dialog.
            </summary>
            <param name="context">The context.</param>
            <returns>The asynchronous task</returns>
        </member>
        <member name="M:Microsoft.Bot.Builder.Location.LocationDialog.ResumeAfterChildDialogInternalAsync(Microsoft.Bot.Builder.Dialogs.IDialogContext,Microsoft.Bot.Builder.Dialogs.IAwaitable{Microsoft.Bot.Builder.Location.Dialogs.LocationDialogResponse})">
            <summary>
            Resumes after native location dialog returns.
            </summary>
            <param name="context">The context.</param>
            <param name="result">The result.</param>
            <returns>The asynchronous task.</returns>
        </member>
        <member name="M:Microsoft.Bot.Builder.Location.LocationDialog.TryReverseGeocodeAddress(Microsoft.Bot.Builder.Location.Bing.Location)">
            <summary>
            Tries to complete missing fields using Bing reverse geo-coder.
            </summary>
            <param name="location">The location.</param>
            <returns>The asynchronous task.</returns>
        </member>
        <member name="M:Microsoft.Bot.Builder.Location.LocationDialog.CreatePlace(Microsoft.Bot.Builder.Location.Bing.Location)">
            <summary>
            Creates the place object from location object.
            </summary>
            <param name="location">The location.</param>
            <returns>The created place object.</returns>
        </member>
        <member name="T:Microsoft.Bot.Builder.Location.Resources.Strings">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Builder.Location.Resources.Strings.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Builder.Location.Resources.Strings.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Builder.Location.Resources.Strings.AskForCountry">
            <summary>
              Looks up a localized string similar to I also need the country:.
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Builder.Location.Resources.Strings.AskForLocality">
            <summary>
              Looks up a localized string similar to I also need the locality:.
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Builder.Location.Resources.Strings.AskForPostalCode">
            <summary>
              Looks up a localized string similar to I also need the postal code:.
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Builder.Location.Resources.Strings.AskForRegion">
            <summary>
              Looks up a localized string similar to I also need the region:.
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Builder.Location.Resources.Strings.AskForStreetAddress">
            <summary>
              Looks up a localized string similar to I also need the address line:.
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Builder.Location.Resources.Strings.Cancel">
            <summary>
              Looks up a localized string similar to cancel.
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Builder.Location.Resources.Strings.Help">
            <summary>
              Looks up a localized string similar to help.
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Builder.Location.Resources.Strings.HelpMessage">
            <summary>
              Looks up a localized string similar to The help message.
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Builder.Location.Resources.Strings.InvalidLocationResponse">
            <summary>
              Looks up a localized string similar to Didn&apos;t get that. Choose a location or cancel..
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Builder.Location.Resources.Strings.LocationNotFound">
            <summary>
              Looks up a localized string similar to I wasn&apos;t able to find this address. Try again..
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Builder.Location.Resources.Strings.MultipleResultsFound">
            <summary>
              Looks up a localized string similar to I found the above results, select one:.
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Builder.Location.Resources.Strings.Reset">
            <summary>
              Looks up a localized string similar to reset.
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Builder.Location.Resources.Strings.SelectLocation">
            <summary>
              Looks up a localized string similar to Select a location.
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Builder.Location.Resources.Strings.SingleResultFound">
            <summary>
              Looks up a localized string similar to I found the above result, should I use it?.
            </summary>
        </member>
    </members>
</doc>
